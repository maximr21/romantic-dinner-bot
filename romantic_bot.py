# romantic_bot_v3.py
import asyncio
from aiogram import Bot, Dispatcher, F, types
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode

API_TOKEN = "7711930364:AAEoVeW_M5JhhHCOx_234MU1zO4kgDMltSs"
OWNER_ID = 547994168  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID (—É–∑–Ω–∞—Ç—å —á–µ—Ä–µ–∑ @userinfobot)

# –ú–µ–Ω—é (–º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –±–ª—é–¥–∞–º–∏)
menu = [
    {
        "name": "üçù –°–ø–∞–≥–µ—Ç—Ç–∏ —Å –ª—é–±–æ–≤—å—é",
        "kisses": 5,
        "image": "https://example.com/spaghetti.jpg"
    },
    {
        "name": "ü•ó –°–∞–ª–∞—Ç ¬´–°–µ—Ä–¥–µ—á–∫–æ¬ª",
        "kisses": 3,
        "image": "https://example.com/salad.jpg"
    },
    {
        "name": "üç∞ –¢–∏—Ä–∞–º–∏—Å—É –æ–±–æ–∂–∞–Ω–∏—è",
        "kisses": 4,
        "image": "https://example.com/tiramisu.jpg"
    },
]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ—Ä–∑–∏–Ω
user_carts = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start_cmd(message: Message, bot: Bot):
    user_id = message.from_user.id
    user_carts[user_id] = []

    await message.answer("–ü—Ä–∏–≤–µ—Ç, –º–æ—è –ª—é–±–∏–º–∞—è! üçì\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–æ–º–∞—à–Ω–∏–π –†–µ—Å—Ç–æ—Ä–∞–Ω. –í—ã–±–∏—Ä–∞–π, —á—Ç–æ —Ö–æ—á–µ—à—å üòò")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é
    for idx, item in enumerate(menu):
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text=f"–î–æ–±–∞–≤–∏—Ç—å –∑–∞ {item['kisses']} üòò", callback_data=f"add_{idx}")]
        ])
        await bot.send_photo(
            chat_id=user_id,
            photo=item["image"],
            caption=item["name"],
            reply_markup=kb
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π "–î–æ–±–∞–≤–∏—Ç—å"
async def add_item(call: CallbackQuery):
    idx = int(call.data.split("_")[1])
    user_id = call.from_user.id
    item = menu[idx]

    user_carts.setdefault(user_id, []).append(item)

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="checkout")]
    ])

    await call.message.answer(f"–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É: {item['name']}", reply_markup=kb)
    await call.answer()

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
async def checkout(call: CallbackQuery, bot: Bot):
    user_id = call.from_user.id
    cart = user_carts.get(user_id, [])

    if not cart:
        await call.answer("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ üò¢")
        return

    # –°–æ—Å—Ç–∞–≤–∏–º –∑–∞–∫–∞–∑
    summary = "\n".join([f"‚Äî {item['name']} ({item['kisses']} üòò)" for item in cart])
    total = sum(item['kisses'] for item in cart)

    text = f"üçΩÔ∏è –¢–≤–æ–π –∑–∞–∫–∞–∑:\n{summary}\n\n–ò—Ç–æ–≥–æ: {total} –ø–æ—Ü–µ–ª—É–π—á–∏–∫–æ–≤ üòò"

    await call.message.answer(text)
    await call.answer("–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω üíå")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É
    await bot.send_message(
        OWNER_ID,
        f"üì• –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç {call.from_user.full_name} (@{call.from_user.username}):\n{text}",
        parse_mode=ParseMode.HTML
    )

    user_carts[user_id] = []  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    bot = Bot(token=API_TOKEN)
    dp = Dispatcher()

    dp.message.register(start_cmd, Command("start"))
    dp.callback_query.register(add_item, F.data.startswith("add_"))
    dp.callback_query.register(checkout, F.data == "checkout")

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
